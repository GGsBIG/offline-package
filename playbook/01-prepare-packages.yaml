---
- name: Prepare offline package content on all nodes
  hosts: all
  become: true
  vars:
    offline_root: "{{ playbook_dir }}/.."
    offline_dest_dir: /opt/offline-package
    package_dir: "{{ offline_dest_dir }}/k8s-package"
    archives:
      - k8s-1.tar.zst
      - k8s-2.tar.zst
  tasks:
    - name: Ensure offline package directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: root
        mode: "0755"
      loop:
        - "{{ offline_dest_dir }}"
        - "{{ package_dir }}"

    - name: Copy offline archives to remote host
      ansible.builtin.copy:
        src: "{{ offline_root }}/{{ item }}"
        dest: "{{ offline_dest_dir }}/{{ item }}"
        mode: "0644"
      loop: "{{ archives }}"

    - name: Extract offline archive payloads
      ansible.builtin.block:
        - name: Check extraction marker for {{ item }}
          ansible.builtin.stat:
            path: "{{ offline_dest_dir }}/.{{ item }}.done"
          register: archive_marker

        - name: Extract {{ item }}
          ansible.builtin.shell: |
            tar --zstd -xf "{{ offline_dest_dir }}/{{ item }}" -C "{{ offline_dest_dir }}"
          args:
            executable: /bin/bash
          when: not archive_marker.stat.exists

        - name: Mark {{ item }} extraction complete
          ansible.builtin.file:
            path: "{{ offline_dest_dir }}/.{{ item }}.done"
            state: touch
          when: not archive_marker.stat.exists
      loop: "{{ archives }}"

    - name: Merge extracted Kubernetes package directories
      ansible.builtin.shell: |
        set -euo pipefail
        shopt -s dotglob nullglob
        for dir in "{{ offline_dest_dir }}/k8s" "{{ offline_dest_dir }}/k8s-2"; do
          if [[ -d "$dir" ]]; then
            mkdir -p "{{ package_dir }}"
            for item in "$dir"/*; do
              mv -f "$item" "{{ package_dir }}/"
            done
            rmdir "$dir"
          fi
        done
        shopt -u dotglob nullglob
      args:
        executable: /bin/bash
